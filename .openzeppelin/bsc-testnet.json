{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xCF769C2C2d8d2Bf8bebF88c87c353f2A64401DB5",
    "txHash": "0xf56a951478d653361f0fc420707ed605ac574196c6852aea6aaf06cc928d706b"
  },
  "proxies": [
    {
      "address": "0x2Fb84bDB1D9B0571734e2316624411719FCE7b33",
      "txHash": "0x4d7bde3fa37e2da1583ec256383a763c5f6b57c3a132ef6166e8b08106e60221",
      "kind": "transparent"
    }
  ],
  "impls": {
    "cbdeb84d1934b58b04ac6430b40c4c08c3ec662a42704c3776481196d2e7cdff": {
      "address": "0xDE1AF16ab42Eb7424a8c07884A737Cf2b29223Ec",
      "txHash": "0xe6874e9b3b3b0eab736edc3fec03b416ede14c1ff9e074bc7ac1a4ba36693555",
      "layout": {
        "solcVersion": "0.8.7",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155ReceiverUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "label": "platformSalesSharePercent",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "NFTSaleContract",
            "src": "contracts/NFTSaleContract.sol:33"
          },
          {
            "label": "partnerSalesSharePercent",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "NFTSaleContract",
            "src": "contracts/NFTSaleContract.sol:34"
          },
          {
            "label": "platformSalesShareAmountTotal",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "NFTSaleContract",
            "src": "contracts/NFTSaleContract.sol:36"
          },
          {
            "label": "partnerSalesShareAmountTotal",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "NFTSaleContract",
            "src": "contracts/NFTSaleContract.sol:37"
          },
          {
            "label": "nftContract",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IERC1155Upgradeable)940",
            "contract": "NFTSaleContract",
            "src": "contracts/NFTSaleContract.sol:39"
          },
          {
            "label": "currencyContract",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IERC20Upgradeable)1143",
            "contract": "NFTSaleContract",
            "src": "contracts/NFTSaleContract.sol:40"
          },
          {
            "label": "nftPrice",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "NFTSaleContract",
            "src": "contracts/NFTSaleContract.sol:69"
          },
          {
            "label": "nftSoldQuantity",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "NFTSaleContract",
            "src": "contracts/NFTSaleContract.sol:72"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC1155Upgradeable)940": {
            "label": "contract IERC1155Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1143": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
